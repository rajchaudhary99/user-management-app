<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Management</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    /* Custom CSS for positioning the toast notification */
    .toast-container {
      position: fixed;
      top: 20px; /* Adjust this value to move it up or down */
      left: 50%;
      transform: translateX(-50%);
      z-index: 1050; /* Ensure it's above other elements */
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Home</h2>
    <button id="loadUsers" class="btn btn-primary">Load Users</button>
    <div id="userList" class="mt-3"></div>

    <!-- Modal for editing user -->
    <div class="modal fade" tabindex="-1" role="dialog" id="editUserModal">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Edit User</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="editUserForm">
              <div class="form-group">
                <label for="editName">Name:</label>
                <input type="text" class="form-control" id="editName" name="name" required>
              </div>
              <div class="form-group">
                <label for="editPhoneNo">Phone No:</label>
                <input type="text" class="form-control" id="editPhoneNo" name="phoneNo">
              </div>
              <div class="form-group">
                <label for="editProfession">Profession:</label>
                <input type="text" class="form-control" id="editProfession" name="profession">
              </div>
              <input type="hidden" id="editUserId">
              <button type="submit" class="btn btn-primary">Update</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Toast container -->
  <div class="toast-container">
    <div aria-live="polite" aria-atomic="true">
      <div class="toast" id="toastNotification" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <strong class="mr-auto" id="toastTitle">Notification</strong>
          <small id="toastTime">Just now</small>
          <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="toast-body" id="toastMessage">
          Message goes here...
        </div>
      </div>
    </div>
  </div>

  <!-- JavaScript -->
  <script>
    // Function to show toast notifications
    function showToast(title, message, delay = 3000) {
      const toastElement = document.getElementById('toastNotification');
      document.getElementById('toastTitle').innerText = title;
      document.getElementById('toastMessage').innerText = message;

      $(toastElement).toast({ delay: delay });
      $(toastElement).toast('show');
    }

    document.getElementById('loadUsers').addEventListener('click', async () => {
      try {
        const token = localStorage.getItem('token');
        if (!token) throw new Error('No token found');

        const response = await fetch('/api/users', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });

        if (!response.ok) throw new Error('Network response was not ok');

        const users = await response.json();

        if (!Array.isArray(users)) throw new Error('Invalid response format');

        const userList = document.getElementById('userList');
        userList.innerHTML = '';

        users.forEach(user => {
          userList.innerHTML += `
            <div class="card mb-2">
              <div class="card-body">
                <h5 class="card-title">${user.name}</h5>
                <p class="card-text">Email: ${user.email}</p>
                <p class="card-text">Phone Number: ${user.phoneNo}</p>
                <p class="card-text">Profession: ${user.profession}</p>
                <button class="btn btn-warning" onclick="openEditModal('${user._id}', '${user.name}', '${user.phoneNo}', '${user.profession}')">Edit</button>
                <button class="btn btn-danger" onclick="deleteUser('${user._id}')">Delete</button>
              </div>
            </div>
          `;
        });
      } catch (error) {
        showToast('Error', 'Error loading users: ' + error.message);
      }
    });

    function openEditModal(id, name, phoneNo, profession) {
      document.getElementById('editUserId').value = id;
      document.getElementById('editName').value = name;
      document.getElementById('editPhoneNo').value = phoneNo;
      document.getElementById('editProfession').value = profession;
      $('#editUserModal').modal('show');
    }

    document.getElementById('editUserForm').addEventListener('submit', async function (e) {
      e.preventDefault();
      const name = document.getElementById('editName').value;
      const phoneNo = document.getElementById('editPhoneNo').value;
      const profession = document.getElementById('editProfession').value;
      const id = document.getElementById('editUserId').value;
      const token = localStorage.getItem('token');

      try {
        const response = await fetch(`/api/users/${id}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify({ name, phoneNo, profession })
        });

        if (!response.ok) throw new Error('Network response was not ok');
        const result = await response.json();
        showToast('Success', result.message || 'User updated successfully');
        $('#editUserModal').modal('hide');

        // Update the user data on the page dynamically
        const card = document.querySelector(`button[onclick="openEditModal('${id}', '${name}', '${phoneNo}', '${profession}')"]`).closest('.card');
        card.querySelector('.card-title').innerText = name;
        card.querySelector('.card-text').innerText = `Phone Number: ${phoneNo} | Profession: ${profession}`;
      } catch (error) {
        showToast('Error', 'Error updating user: ' + error.message);
      }
    });

    async function deleteUser(id) {
      if (confirm('Are you sure you want to delete this user?')) {
        try {
          const token = localStorage.getItem('token');
          const response = await fetch(`/api/users/${id}`, {
            method: 'DELETE',
            headers: {
              'Authorization': `Bearer ${token}`
            }
          });

          if (!response.ok) throw new Error('Network response was not ok');
          const result = await response.json();
          showToast('Success', result.message || 'User deleted successfully');
          document.querySelector(`button[onclick="deleteUser('${id}')"]`).closest('.card').remove();
        } catch (error) {
          showToast('Error', 'Error deleting user: ' + error.message);
        }
      }
    }
  </script>

  <!-- jQuery, Popper.js, and Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
